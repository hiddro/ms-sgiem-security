spring:
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    hibernate:
      ddl-auto: update
    open-in-view: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://oregon-postgres.render.com:5432/sgiem
    username: sgiem_user
    password: 4A33cQM1PxStlo6igXesNBiVR9sUYO7p
#    url: jdbc:postgresql://172.17.0.2:5432/sgiem
#    username: postgres
#    password: secret
#    url: jdbc:postgresql://devsgiem.postgres.database.azure.com:5432/sgiem
#    username: sgiemadmindev@devsgiem
#    password: sgiem@2023
  banner:
    location: classpath:banner/securityBanner.txt
  application:
    name: SECURITY-SERVICE
  kafka:
    bootstrap-servers: pkc-n3603.us-central1.gcp.confluent.cloud:9092
    properties:
      basic:
        auth:
          credentials:
            source: USER_INFO
          user:
            info: B2LXQP6M5RRVRGYW:JxJPpzoCdwuznqBhT4NJZtFF6koDclfr6Z23Qhxr0xTQThYPODwu0lPksUTRGjt1
      schema:
        registry:
          url: https://psrc-j55zm.us-central1.gcp.confluent.cloud
      security:
        protocol: SASL_SSL
      ssl:
        endpoint:
          identification:
            algorithm: https
      sasl:
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username='JMZCBCPQXTOUEBIY' password='1DH/pWBxRtboijUdirbiyq4cAR8bpC49dV9xvIZBnmJrj75n8bsOpC60oGTRZ0+g';
        mechanism: PLAIN
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    consumer:
      group-id: spring-boot
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
#      properties:
#        spring:
#          deserializer:
#            value:
#              delegate:
#                class: org.springframework.kafka.support.serializer.JsonDeserializer
#          json:
#            trusted:
#              packages: '*'

eureka:
  client:
    service-url:
      defaultZone : http://localhost:8761/eureka/
    enabled: true


server:
  port: 9898

logging:
  level:
    org:
      hibernate:
        SQL: debug